public class Solution {
    //O(n) time and O(1) space
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        if(s==null || s.length()==0) return 0;
        int n = s.length(), left = 0, right = 0, max = 0;
        int[] count = new int[256];
        int unique = 0;
        while(right<n) {
            if(count[s.charAt(right++)]++==0) unique++;
            while(unique>2) {
                count[s.charAt(left)]--;
                if(count[s.charAt(left)]==0) unique--;
                left++;
            }
            max = Math.max(max, right-left);
        }
        return Math.max(max, right-left);
    }
}
