//O(n) time and O(1) space
class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
        if(nums==null || nums.length==0) return 0;
        int n = nums.length;
        int left = 0, right = 0, flips = 0, max = 0;
        while(right<n) {
            if(nums[right++]==0) flips++;
            while(left<right && flips>1) {
                if(nums[left++]==0) flips--;
            }
            max = Math.max(max, right-left);
        }
        return max;
    }
}
