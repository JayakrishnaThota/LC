//O(n) time and space
class Solution {
    public List<List<Integer>> findLeaves(TreeNode root) {
        List<List<Integer>> result = new ArrayList();
        List<Integer> list = new ArrayList();
        dfs(result, list, root);
        return result;
    }
    
    public int dfs(List<List<Integer>> result, List<Integer> list, TreeNode root) {
        if(root==null) return -1;
        int left = dfs(result, list, root.left);
        int right = dfs(result, list, root.right);
        int height = Math.max(left, right) + 1;
        if(result.size()<height+1) result.add(new ArrayList());
        result.get(height).add(root.val);
        return height;
    }
    
}
