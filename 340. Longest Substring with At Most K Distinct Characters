//O(n) time and O(1) space
class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        int[] count = new int[256];
        int left = 0, distinct = 0, max = 0;
        for(int right=0;right<s.length();right++){
            if(count[s.charAt(right)]==0) distinct++;
            count[s.charAt(right)]++;
            while(distinct>k){
                count[s.charAt(left)]--;
                if(count[s.charAt(left)]==0){
                    distinct--;
                }
                left++;
            }
            max = Math.max(max, right-left+1);
        }
        return max;
    }
}
