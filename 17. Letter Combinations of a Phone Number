//O(4^n) time and space complexity
class Solution {
    public List<String> letterCombinations(String digits) {
        if (digits == null || digits.length() == 0) return new ArrayList<>();
        String[] mapping = new String[]{"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        Queue<String> queue = new LinkedList<>();
        queue.add("");
        for (int i = 0; i < digits.length(); i++) {
            int val = digits.charAt(i) - '0';
            int size = queue.size();
            for (int j = 0; j < size; j++) {
                String t = queue.poll();
                for (char c : mapping[val].toCharArray()) {
                    queue.add(t + c);
                }
            }
        }
        return new ArrayList<>(queue);
    }
}
