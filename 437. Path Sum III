//O(n) time and space
class Solution {
    public int pathSum(TreeNode root, int targetSum) {
        if(root==null) return 0;
        Map<Integer, Integer> map = new HashMap();
        map.put(0,1);
        return preOrder(root, targetSum, 0, map);
    }
    
    public int preOrder(TreeNode root, int targetSum, int curSum, Map<Integer, Integer> map) {
        if(root==null) return 0;
        curSum+=root.val;
        int res = map.getOrDefault(curSum-targetSum, 0);
        map.put(curSum, map.getOrDefault(curSum,0)+1);
        res+=preOrder(root.left, targetSum, curSum, map);
        res+=preOrder(root.right, targetSum, curSum, map);
        map.put(curSum, map.get(curSum)-1);
        return res;
    }
    
}
