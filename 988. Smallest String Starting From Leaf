//O(n*h) time and O(h) space
class Solution {
    String smallest = null;
    public String smallestFromLeaf(TreeNode root) {
        if(root==null) return "";
        dfs(root, new StringBuilder());
        return smallest;
    }

    private void dfs(TreeNode node, StringBuilder path) {
        if(node==null) return;
        char cur = (char)(node.val+'a');
        path.insert(0, cur);
        if(node.left == null && node.right == null) {
            String pathString = path.toString();
            if(smallest == null || smallest.compareTo(pathString) > 0) {
                smallest = pathString;
            }
        } else {
            dfs(node.left, path);
            dfs(node.right, path);
        }
        path.deleteCharAt(0);
    }
}
