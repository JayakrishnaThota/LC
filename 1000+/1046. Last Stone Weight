//O(nlgn) time and O(n) space
class Solution {
    public int lastStoneWeight(int[] stones) {
        if(stones==null || stones.length==0) return 0;
        int n = stones.length;
        PriorityQueue<Integer> pq = new PriorityQueue<Integer>((a,b)->(b-a));
        for(int stone:stones) pq.offer(stone);
        while(pq.size()>1){
            int y = pq.poll();
            int x = pq.poll();
            if(y-x>0) pq.offer(y-x);
        }
        return (pq.size()==1)?pq.poll():0;
    }
}
