//O(n) time and space
class Solution {
    public String alphabetBoardPath(String target) {
        if(target==null || target.length()==0) return "";
        int prevX = 0, prevY = 0;
        StringBuffer sb = new StringBuffer();
        for(int i=0;i<target.length();i++) {
            char c = target.charAt(i);
            int val = c-'a';
            int curX = val/5, curY = val%5;
            if(prevX==curX && prevY==curY) {
                sb.append("!");
            }
            else {
                printPath(sb, prevX, prevY, curX, curY);
                sb.append("!");
                prevX = curX;
                prevY = curY;
            }
        }
        return sb.toString();
    }
    
    public void printPath(StringBuffer sb, int prevX, int prevY, int curX, int curY) {
        while(curX<prevX) {
            sb.append("U");
            curX++;
        }
        while(curY<prevY) {
            sb.append("L");
            curY++;
        }
        while(curX>prevX) {
            sb.append("D");
            curX--;
        }
        while(curY>prevY) {
            sb.append("R");
            curY--;
        }
    }
    
}
