//O(n) time and space
class Solution {
    int left, right, val;
    public boolean btreeGameWinningMove(TreeNode root, int n, int x) {
        val = x;
        helper(root);
        int player1Max = n/2;
        int player2Max = Math.max(n-(1+left+right), Math.max(left, right));
        return (player2Max>player1Max);
    }
    
    public int helper(TreeNode root) {
        if(root==null) return 0;
        int l = helper(root.left);
        int r = helper(root.right);
        if(root.val==val) {
            left = l;
            right = r;
        }
        return 1+l+r;
    }
    
}
