//O(m+n) time and O(logm+logn) space
class Solution {
    public boolean twoSumBSTs(TreeNode root1, TreeNode root2, int target) {
        if(root1==null || root2==null) return false;
        Stack<TreeNode> stack1 = new Stack();
        Stack<TreeNode> stack2 = new Stack();
        TreeNode p1 = null, p2 = null;
        while(true) {
            //Get min element in root1
            while(root1!=null) {
                stack1.push(root1);
                root1 = root1.left;
            }
            //Get max element in root2
            while(root2!=null) {
                stack2.push(root2);
                root2 = root2.right;
            }
            if(stack1.isEmpty() || stack2.isEmpty()) break;
            p1 = stack1.peek();
            p2 = stack2.peek();
            if(p1.val + p2.val == target) return true;
            else if(p1.val + p2.val < target) {
                stack1.pop();
                root1 = p1.right;
            }
            else {
                stack2.pop();
                root2 = p2.left;
            }
        }
        return false;
    }
}
