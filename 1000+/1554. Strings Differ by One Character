// Robin-karp
//O(len*n) time and space
class Solution {
    public boolean differByOne(String[] dict) {
        if(dict==null || dict.length==0) return false;
        int n = dict.length, len = dict[0].length();
        long mod = (long) Math.pow(10, 20) + 7;
        Set<Long> set = new HashSet();
        long[] hash = new long[dict.length];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < len; j++) {
                hash[i] = (hash[i] * 26 + dict[i].charAt(j) - 'a') % mod;
            }
        }
        
        long base = 1;
        for (int j = len - 1; j >= 0; j--) {
            set.clear();
            for (int i = 0; i < n; i++) {
                long newHash = (hash[i] - base * (dict[i].charAt(j) - 'a')%mod+mod) % mod;
                if (set.contains(newHash)) {
                    return true;
                }
                set.add(newHash);
            }
            base = 26 * base % mod;
        }
        
        return false;
    }
}
