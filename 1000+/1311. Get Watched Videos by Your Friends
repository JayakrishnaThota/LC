//O(nlogn) time and O(n) space
class Solution {
    public List<String> watchedVideosByFriends(List<List<String>> watchedVideos, int[][] friends, int id, int level) {
        TreeMap<String, Integer> map = new TreeMap();
        TreeMap<Integer, List<String>> tmap = new TreeMap();
        Queue<Integer> queue = new LinkedList();
        Set<Integer> set = new HashSet();
        queue.offer(id);
        set.add(id);
        while(!queue.isEmpty()) {
            int size = queue.size();
            if(level==0) break;
            for(int k=0;k<size;k++) {
                int u = queue.poll();
                for(int v:friends[u]) {
                    if(set.add(v)) {
                        queue.offer(v);
                    }
                }
            }
            level--;
        }
        while(!queue.isEmpty()) {
            int index = queue.poll();
            for(String video:watchedVideos.get(index)) {
                map.put(video, map.getOrDefault(video,0)+1);
            }
        }
        for(String key:map.keySet()) {
            int val = map.get(key);
            tmap.putIfAbsent(val, new ArrayList());
            tmap.get(val).add(key);
        }
        List<String> result = new ArrayList();
        for(Integer key:tmap.keySet()) {
            result.addAll(tmap.get(key));
        }
        return result;
    }
}
