class BoundedBlockingQueue {

    private Semaphore enq;

    private Semaphore deq;

    ConcurrentLinkedDeque<Integer> q;

    public BoundedBlockingQueue(int capacity) {
        q =  new ConcurrentLinkedDeque<>();
        enq = new Semaphore(capacity);
        deq = new Semaphore(0);
    }

    public void enqueue(int element) throws InterruptedException {
        enq.acquire();
        q.add(element);
        deq.release();
    }

    public int dequeue() throws InterruptedException {
        deq.acquire();
        int val = q.poll();
        enq.release();
        return val;
    }

    public int size() {
        return q.size();
    }
}
