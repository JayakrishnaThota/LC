// O(n) time and space
class Solution {
    int max = 0;
    public int longestZigZag(TreeNode root) {
        if(root==null) return 0;
        postOrder(root);
        return max;
    }

    private int[] postOrder(TreeNode root) {
        if(root==null) return new int[]{-1,-1};
        int[] leftSize = postOrder(root.left);
        int[] rightSize = postOrder(root.right);
        int curLeft = 1 + leftSize[1];
        int curRight = 1 + rightSize[0];
        max = Math.max(max, 1+Math.max(leftSize[1], rightSize[0]));
        return new int[]{curLeft, curRight};
    }

}
