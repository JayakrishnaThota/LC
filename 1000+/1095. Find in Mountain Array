/**
 * // This is MountainArray's API interface.
 * // You should not implement it, or speculate about its implementation
 * interface MountainArray {
 *     public int get(int index) {}
 *     public int length() {}
 * }
 */
 //O(logn) time and O(1) space
class Solution {
    public int findInMountainArray(int target, MountainArray mountainArr) {
        int n = mountainArr.length();
        if(n<3) return -1;
        int low = 0, high = n-1, peak = 0;
        while(low<high) {
            int mid = low + (high-low)/2;
            if(mountainArr.get(mid+1)>mountainArr.get(mid)) {
                low = mid+1;
            }
            else {
                high = mid;
            }
        }
        peak = low;
        low = 0;
        high = peak;
        //Find in the increasing strip
        while(low<=high) {
            int mid = low + (high-low)/2;
            if(mountainArr.get(mid)<target) {
                low = mid+1;
            }
            else if(mountainArr.get(mid)>target) {
                high = mid-1;
            }
            else return mid;
        }
        low = peak;
        high = n-1;
        //Find in the decreasing strip
        while(low<=high) {
            int mid = low + (high-low)/2;
            if(mountainArr.get(mid)>target) {
                low = mid+1;
            }
            else if(mountainArr.get(mid)<target) {
                high = mid-1;
            }
            else return mid;
        }
        return -1;
    }
}
