//O(n) time and space
class Solution {
    public int longestSubsequence(int[] arr, int difference) {
        if(arr==null || arr.length==0) return 0;
        int n = arr.length, max = 0;
        Map<Integer, Integer> map = new HashMap();
        for(int i=0;i<arr.length;i++) {
            int cur = arr[i] - difference;
            map.put(arr[i], map.getOrDefault(cur,0)+1);
            max = Math.max(max, map.get(arr[i]));
        }
        return max;
    }
}
