//O(n) time and space
class Solution {
    public int validSubarrays(int[] nums) {
        if(nums==null || nums.length==0) return 0;
        Stack<Integer> stack = new Stack();
        int n = nums.length, res = 0;
        stack.push(0);
        for(int i=1;i<n;i++) {
            int num = nums[i];
            while(!stack.isEmpty() && num<nums[stack.peek()]) {
                res+=(i-stack.pop());
            }
            stack.push(i);
        }
        while(!stack.isEmpty()) {
            res+=(n-stack.pop());
        }
        return res;
    }
}
