//O(n) time and O(1) space
class Solution {
    public int[] prevPermOpt1(int[] A) {
        if(A==null || A.length<2) return A;
        int n = A.length;
        int left = n-2;
        while(left>=0) {
            if(A[left]>A[left+1]) break;
            left--;
        }
        if(left<0) return A;
        int right = n-1;
        int rightValue = A[right];
        while(A[right]==rightValue) {
            right--;
        }
        right++;
        swap(A, left, right);
        return A;
    }
    
    public void swap(int[] A, int i, int j) {
        int temp = A[i];
        A[i] = A[j];
        A[j] = temp;
    }
}
