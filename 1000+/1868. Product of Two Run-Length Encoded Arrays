//O(m+n) time and O(1) space
class Solution {
    public List<List<Integer>> findRLEArray(int[][] encoded1, int[][] encoded2) {
        int i = 0, j=0;
        List<List<Integer>> res = new ArrayList<>();
        while(i<encoded1.length && j<encoded2.length) {
            int len = Math.min(encoded1[i][1], encoded2[j][1]);
            int mul = encoded1[i][0] * encoded2[j][0];
            if(res.size()>0 && res.get(res.size()-1).get(0)==mul) {
                res.get(res.size()-1).set(1, res.get(res.size()-1).get(1)+len);
            } else {
                res.add(Arrays.asList(mul, len));
            }
            encoded1[i][1]-=len;
            encoded2[j][1]-=len;
            if(encoded1[i][1]==0) i++;
            if(encoded2[j][1]==0) j++;
        }
        return res;
    }
}
