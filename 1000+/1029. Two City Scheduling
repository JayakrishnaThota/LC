//O(nlogn) time and O(n) space
class Solution {
    public int twoCitySchedCost(int[][] costs) {
        if(costs==null || costs.length==0) return 0;
        int res = 0, index = 0, n = costs.length;
        int[][] array = new int[n][3];
        for(int[] cost:costs) {
            array[index][0] = cost[0];
            array[index][1] = cost[1];
            array[index][2] = cost[0]-cost[1];
            index++;
        }
        Arrays.sort(array, new Comparator<int[]>() {
            @Override
            public int compare(int[] o1, int[] o2) {
                return Integer.compare(o1[2], o2[2]);
            }
        });
        for(int i=0;i<n/2;i++) {
            res+=array[i][0];
        }
        for(int i=n/2;i<n;i++) {
            res+=array[i][1];
        }
        return res;
    }
}
