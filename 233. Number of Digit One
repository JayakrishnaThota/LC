//O(logn) time and O(1) space
class Solution {
    public int countDigitOne(int n) {
        //Upto 1600, at ten digit there are 160 ones
        //1610 -> +1
        //1617 -> +7
        //1650 > +10
        //(n/100)*10 + min(max(n%100 - 10 + 1, 0),10)
        long count = 0;
        for(int i=1;i<=n;i*=10) {
            long next = i*10;
            long first = ((n/next)*i);
            long a = Math.max(n%next - i + 1, 0);
            long b = i;
            long second = Math.min(a, b);
            count+=(first+second);
        }
        return (int)count;
    }
}
