/*
An abbreviation of a word follows the form <first letter><number><last letter>. Below are some examples of word abbreviations:
a) it                      --> it    (no abbreviation)
     1
b) d|o|g                   --> d1g
              1    1  1
     1---5----0----5--8
c) i|nternationalizatio|n  --> i18n
              1
     1---5----0
d) l|ocalizatio|n          --> l10n

Assume you have a dictionary and given a word, find whether its abbreviation is unique in the dictionary. 
A word's abbreviation is unique if no other word from the dictionary has the same abbreviation.
Example: 
Given dictionary = [ "deer", "door", "cake", "card" ]
isUnique("dear") -> false
isUnique("cart") -> true
isUnique("cane") -> false
isUnique("make") -> true
Tags: Hash Table, Design
Similar Problems: (E) Two Sum III - Data structure design
*/

class ValidWordAbbr {
    Map<String, String> map;
    public ValidWordAbbr(String[] dictionary) {
        map = new HashMap();
        for(String d:dictionary){
            String key = helper(d);
            if(map.containsKey(key)){
                if(!map.get(key).equals(d))
                    map.put(key,"");
            }
            else{
                map.put(key,d);
            }
        }
    }
    
    public boolean isUnique(String word) {
        return !map.containsKey(helper(word))||map.get(helper(word)).equals(word);
    }
    
    public String helper(String s){
        if(s.length()<=2) return s;
        return s.charAt(0)+String.valueOf(s.length()-2)+s.charAt(s.length()-1);
    }
}
