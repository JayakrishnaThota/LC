class BSTIterator {

    Stack<TreeNode> stack;
    public BSTIterator(TreeNode root) {
        stack = new Stack();
        while(root!=null) {
            stack.push(root);
            root = root.left;
        }
    }
    
    //O(1) amortize time and O(n) space
    public int next() {
        TreeNode ret = stack.pop();
        TreeNode cur = ret;
        if(cur.right!=null) {
            cur = cur.right;
            while(cur!=null) {
                stack.push(cur);
                cur = cur.left;
            }
        }

        return ret.val;
    }
    
    //O(1) time and space
    public boolean hasNext() {
        return !stack.isEmpty();
    }
}

