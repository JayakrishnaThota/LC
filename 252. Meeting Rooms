/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
 
 /*
 
 Given an array of meeting time intervals consisting of start and end times [s1, e1], [s2, e2], ... , determine if a person could attend all meetings.

For example,
Given [ [0, 30], [5, 10], [15, 20] ],
return false.

*/

//O(nlogn) and O(1)
class Solution {
    public boolean canAttendMeetings(Interval[] intervals) {
        //Sanity check
        if(intervals==null || intervals.length==0) return true;
        //Sort the intervals by their end points
        Arrays.sort(intervals, new Comparator<Interval>(){
           public int compare(Interval i1, Interval i2){
               if(i1.end!=i2.end)
                   return i1.end-i2.end;
               else
                   return i1.start-i2.start;
           } 
        });
        int end = intervals[0].end;
        for(int i=1;i<intervals.length;i++){
            if(intervals[i].start<end)
                return false;
            end = intervals[i].end;
        }
        return true;
    }
}
