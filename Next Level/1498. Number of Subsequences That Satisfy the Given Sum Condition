//O(nlogn) time and O(n) space
class Solution {
    public int numSubseq(int[] nums, int target) {
        if(nums==null || nums.length<2) return 0;
        Arrays.sort(nums);
        int n = nums.length, mod = (int)1e9 + 7;
        int[] twoPowers = new int[n];
        twoPowers[0] = 1;
        for(int i=1;i<n;i++) {
            twoPowers[i] = (2*twoPowers[i-1])%mod;
        }
        int left = 0, right = n-1, res = 0;
        while(left<=right) {
            int sum = nums[left] + nums[right];
            if(sum>target) {
                right--;
            }
            else {
                res = (res + twoPowers[right-left++])%mod;
            }
        }
        return res;
    }
}
