//O(V+E) time and space
class Solution {
    public int[] gardenNoAdj(int N, int[][] paths) {
        int[] result = new int[N];
        Map<Integer, Set<Integer>> adjlist = new HashMap();
        for(int i=0;i<N;i++) {
            adjlist.put(i, new HashSet());
        }
        for(int[] path:paths) {
            int u = path[0]-1, v = path[1]-1;
            adjlist.get(u).add(v);
            adjlist.get(v).add(u);
        }
        for(int u=0;u<N;u++) {
            boolean[] colors = new boolean[5];
            for(int v:adjlist.get(u)) {
                colors[result[v]] = true;
            }
            for(int c=4;c>0;c--) {
                if(colors[c]) continue;
                result[u] = c;
            }
        }
        return result;
    }
}
