class SparseVector {
    
    Map<Integer, Integer> map;
    //O(n) time and space
    SparseVector(int[] nums) {
        map = new HashMap();
        for(int i=0;i<nums.length;i++) {
            if(nums[i]==0) continue;
            map.put(i, nums[i]);
        }
    }
    
	//O(n) time and O(1) space
    public int dotProduct(SparseVector vec) {
        int res = 0;
        for(Integer key:map.keySet()) {
            if(vec.map.containsKey(key)) {
                res += vec.map.get(key)*map.get(key);
            }
        }
        return res;
    }
}

// Your SparseVector object will be instantiated and called as such:
// SparseVector v1 = new SparseVector(nums1);
// SparseVector v2 = new SparseVector(nums2);
// int ans = v1.dotProduct(v2);
