//O(n) time and space
class Solution {
    public int minOperations(int[] nums, int x) {
        Map<Integer, Integer> map = new HashMap();
        map.put(0, -1);
        int n = nums.length, sum = 0, target = 0;
        for(int num:nums) {
            sum+=num;
        }
        target = sum-x;
        if(target==0) return n;
        sum = 0;
        int max = Integer.MIN_VALUE;
        for(int i=0;i<n;i++) {
            sum+=nums[i];
            if(map.containsKey(sum-target)) {
                max = Math.max(max, i-map.get(sum-target));
            }
            map.put(sum, i);
        }
        return (max==Integer.MIN_VALUE)?-1:n-max;
    }
}
