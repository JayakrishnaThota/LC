//O(n) time and O(1) space
class Solution {
    public int shortestWay(String source, String target) {
        int[] smap = new int[26];
        int[] tmap = new int[26];
        int result = 0;
        for(char c:source.toCharArray()) {
            smap[c-'a']++;
        }
        for(char t:target.toCharArray()) {
            if(smap[t-'a']==0) return -1;
            tmap[t-'a']++;
        }
        for(int i=0;i<26;i++) {
            if(tmap[i]>0)
                result = Math.max(result, tmap[i]/smap[i]);
        }
        return result;
    }
}
