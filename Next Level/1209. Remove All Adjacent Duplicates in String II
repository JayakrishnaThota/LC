//O(n) time and space
class Solution {
    public String removeDuplicates(String s, int k) {
        Stack<Character> stack = new Stack();
        Stack<Integer> intStack = new Stack();
        int index = 0, count = 1, n = s.length();
        while(index<s.length()) {
            char c = s.charAt(index++);
            if(stack.isEmpty() || stack.peek()!=c) {
                count = 1;
            }
            else if(stack.peek()==c) {
                count++;
            }
            intStack.push(count);
            stack.push(c);
            if(count==k) {
                for(int i=0;i<k;i++) {
                    intStack.pop();
                    stack.pop();
                }
                count = intStack.isEmpty() ? 1: intStack.peek();
            }
        }
        StringBuffer sb = new StringBuffer();
        while(!stack.isEmpty()) {
            sb.append(stack.pop()+"");
        }
        return sb.reverse().toString();
    }
}
