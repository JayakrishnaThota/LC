//O(n) time and space
class Solution {
    int res = 0;
    public int pseudoPalindromicPaths (TreeNode root) {
        int[] count = new int[10];
        backtrack(root, count);
        return res;
    }
    
    public void backtrack(TreeNode root, int[] count) {
        if(root==null) return;
        count[root.val]++;
        if(root.left==null && root.right==null) {
            if(isPalindrome(count)) {
                res++;
            }
        }
        else {
            backtrack(root.left, count);
            backtrack(root.right, count);
        }
        count[root.val]--;
    }
    
    public boolean isPalindrome(int[] count) {
        int odd = 0;
        for(int i=0;i<10;i++) {
            if(count[i]%2==0) continue;
            else odd++;
        }
        return (odd<=1);
    }
    
}
