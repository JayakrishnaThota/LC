//O(n) time and space
class Solution {
    int res = 0;
    public int diameter(Node root) {
        if(root==null) return 0;
        dfs(root);
        return res;
    }
    
    public int dfs(Node root) {
        if(root==null) return 0;
        int max1 = 0, max2 = 0;
        for(Node node:root.children) {
            int h = dfs(node);
            if(h>max1) {
                max2 = max1;
                max1 = h;
            }
            else if(h>max2) {
                max2 = h;
            }
        }
        res = Math.max(res, max1+max2);
        return 1+max1;
    }
    
}
