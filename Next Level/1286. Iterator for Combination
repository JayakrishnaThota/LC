class CombinationIterator {

    Queue<String> queue;
    public CombinationIterator(String characters, int combinationLength) {
        queue = new LinkedList();
        backtrack(characters, combinationLength, "", 0);
    }
    
    public void backtrack(String s, int k, String cur, int index) {
        if(k==0) {
            queue.offer(cur);
            return;
        }
        for(int i=index;i<s.length();i++) {
            backtrack(s, k-1, cur+s.charAt(i), i+1);
        }
    }
    
    public String next() {
        return queue.poll();
    }
    
    public boolean hasNext() {
        return !queue.isEmpty();
    }
}

/**
 * Your CombinationIterator object will be instantiated and called as such:
 * CombinationIterator obj = new CombinationIterator(characters, combinationLength);
 * String param_1 = obj.next();
 * boolean param_2 = obj.hasNext();
 */
