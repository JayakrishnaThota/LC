//O(nlogn) time and O(n) space
class Solution {
    public boolean carPooling(int[][] trips, int capacity) {
        if(trips==null || trips.length==0) return true;
        TreeMap<Integer, Integer> map = new TreeMap();
        for(int[] trip:trips) {
            int count = trip[0];
            int start = trip[1];
            int end = trip[2];
            map.put(start, map.getOrDefault(start,0)+count);
            map.put(end, map.getOrDefault(end,0)-count);
        }
        int active = 0;
        for(int key:map.keySet()) {
            active+=map.get(key);
            if(active>capacity) return false;
        }
        return true;
    }
}
