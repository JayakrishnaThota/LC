//O(nlogn) time and O(n) space
class Solution {
    public List<Interval> employeeFreeTime(List<List<Interval>> schedule) {
        List<Interval> result = new ArrayList();
        if(schedule==null || schedule.size()==0) return result;
        List<Interval> list = new ArrayList();
        for(List<Interval> s:schedule) {
            for(Interval i:s) {
                list.add(i);
            }
        }
        Collections.sort(list, new Comparator<Interval>(){
            public int compare(Interval a, Interval b) {
                return a.start-b.start;
            }
        });
        int start = list.get(0).start, end = list.get(0).end;
        for(int i=1;i<list.size();i++) {
            int curStart = list.get(i).start;
            int curEnd = list.get(i).end;
            if(curStart>end) {
                result.add(new Interval(end, curStart));
                start = curStart;
                end = curEnd;
            } else {
                end = Math.max(curEnd, end);
            }
        }
        return result;
    }
}
